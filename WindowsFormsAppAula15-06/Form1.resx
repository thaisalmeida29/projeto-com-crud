<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>